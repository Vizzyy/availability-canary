AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Resources:
  LambdaFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: 'availability-canary'
      Handler: availability-canary.lambda_handler
      Runtime: python3.8
      CodeUri: lambda_function.zip
      MemorySize: 128
      Timeout: 10
      Role: 'arn:aws:iam::476889715112:role/service-role/epic-shelter-lambda-lights'
      Environment:
        Variables:
          SSM_PATH: '/epic-shelter'
          WEBSITE_URL: 'https://vizzyy.com/logs'
      Events:
        InvocationLevel:
          Type: Schedule
          Properties:
            Schedule: rate(1 minute)
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${LambdaFunction}"
      RetentionInDays: 7
  ErrorsAlarm: # Alarm if 5 errors in a row ( 1 per min for 5 min )
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - arn:aws:sns:us-east-1:476889715112:unhealthyHost
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: FunctionName
          Value: !Ref LambdaFunction
      EvaluationPeriods: 5 # number of failed data points to trigger
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 60 # seconds
      Statistic: Sum
      Threshold: '1'
      TreatMissingData: breaching
  InvocationsAlarm: # Alarm if we're not getting any invocations
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - arn:aws:sns:us-east-1:476889715112:unhealthyHost
      ComparisonOperator: LessThanThreshold
      Dimensions:
        - Name: FunctionName
          Value: !Ref LambdaFunction
      EvaluationPeriods: 5 # number of failed data points to trigger
      MetricName: Invocations
      Namespace: AWS/Lambda
      Period: 60 # seconds
      Statistic: Sum
      Threshold: '1'
      TreatMissingData: breaching